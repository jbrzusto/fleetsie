#!/bin/bash

# fleetsiesrv - set up a server for use with fleetsie

function usage () {
cat <<EOF
fleetsie_srv USER@SERVER

where 'USER' must either be 'root', or a user with sudo privileges on 'SERVER'

This script will set up 'SERVER' via ssh like so:

- create user 'fleetsie' with 'sudo' privileges; you will be prompted to enter
  a password for this user
- create sqlite database '/home/fleetsie/fleets.sqlite' with this schema:

CREATE TABLE devices (
     id INTEGER UNIQUE PRIMARY KEY NOT NULL,  -- unique ID for device, across all fleets
     fleet VARCHAR NOT NULL,                  -- name of fleet device belongs to
	 id_in_fleet INTEGER NOT NULL,            -- unique ID for device within fleet
     fleetuser VARCHAR NOT NULL,              -- name of user device uses for ssh to fleet server; typically, fleetsie_FLEET
     hostname VARCHAR NOT NULL,               -- hostname for device; typically FLEET-ID_IN_FLEET
     hwid VARCHAR,                            -- hardware ID of device; NULL means no device registered to this record yet
     otp VARCHAR NOT NULL,                    -- one-time password used by device to register
     ts_generated DOUBLE NOT NULL,            -- unix timestamp for when this device record was generated
     ts_registered DOUBLE,                    -- unix timestamp for when this device was registered; NULL means not registered yet
     tunnel_port INTEGER NOT NULL,            -- TCP port mapped on server back to device SSH server port
     device_public_key VARCHAR NOT NULL,      -- public key which can be used to login as user 1000 on device
     device_private_key VARCHAR NOT NULL,     -- private key which can be used to login as user 1000 on device
     server_public_key VARCHAR NOT NULL,      -- public key which device will use to ssh into fleet server
     server_private_key VARCHAR NOT NULL,     -- private key which device will use to ssh into fleet server
     ip_provisioned_from VARCHAR NOT NULL     -- IP address from which request to provision this device originated
 );
 CREATE UNIQUE INDEX ON devices(hwid);
 CREATE UNIQUE INDEX ON devices(fleet, otp, hwid);

This table, initially empty, holds pre-allocated device records for one or more
fleets.  Entries in this table will be created by fleet administrators
using 'fleetsie_gen'.  When entries are created, these fields are left
NULL:

ts_provisioned
ip_provisioned_from
hwid

The NULL fields get set during device provisioning when a physical
device presents an unused OTP password to register itself with the
server.  It is not known in advance which physical device will end up
registered to each pre-allocated device, but 'fleetsie_auth' ensures
that no two physical devices get registered to the same device record.
EOF

exit 1
}

SSHUSER=$1
SERVER=${1#*@}

if ! ssh $SSHUSER date > /dev/null 2>/tmp/error.txt; then
    echo unable to ssh $SSHUSER: `cat /tmp/error.txt`
    exit 1
fi

echo Confirmed that $SSHUSER is valid.
echo Installing any missing packages...
ssh $SSHUSER sudo apt-get update
ssh $SSHUSER sudo apt install sqlite3
echo Creating user fleetsie...
ssh $SSHUSER sudo adduser --disabled-password --gecos '""' fleetsie
echo Generating ssh keys for user fleetsie
TARGFILE=~/.ssh/id_ed25519_fleetsie_$SERVER
ssh-keygen -P "" -t ed25519 -f $TARGFILE
echo Adding config to ~/.ssh for fleetsie@$SERVER
cat >> ~/.ssh/config <<EOF
Host $SERVER
  Hostname $SERVER
  User fleetsie
  StrictHostKeyChecking yes
  IdentityFile $TARGFILE
  IdentitiesOnly true
EOF
echo Adding new key to authorized_keys file for fleetsie@$SERVER
ssh $SSHUSER sudo mkdir /home/fleetsie/.ssh
cat ${TARGFILE}.pub | ssh $SSHUSER sudo tee /home/fleetsie/.ssh/authorized_keys
echo Changing ownership of .ssh directory for fleetsie@$SERVER
ssh $SSHUSER sudo chown -R fleetsie:fleetsie /home/fleetsie/.ssh/
echo Creating fleets.sqlite database with empty devices table
cat | ssh fleetsie@$SERVER sqlite3 fleets.sqlite <<EOF
CREATE TABLE devices (
     id INTEGER UNIQUE PRIMARY KEY NOT NULL,  -- unique ID for device, across all fleets
     fleet VARCHAR NOT NULL,                  -- name of fleet device belongs to
     id_in_fleet INTEGER NOT NULL,            -- unique ID for device within fleet
     fleetuser VARCHAR NOT NULL,              -- name of user device uses for ssh to fleet server; typically, fleetsie_FLEET
     hostname VARCHAR NOT NULL,               -- hostname for device; typically FLEET-ID_IN_FLEET
     hwid VARCHAR,                            -- hardware ID of device; NULL means no device registered to this record yet
     otp VARCHAR NOT NULL,                    -- one-time password used by device to register
     ts_generated DOUBLE NOT NULL,            -- unix timestamp for when this device record was generated
     ts_registered DOUBLE,                    -- unix timestamp for when this device was registered; NULL means not registered yet
     tunnel_port INTEGER NOT NULL,            -- TCP port mapped on server back to device SSH server port
     device_public_key VARCHAR NOT NULL,      -- public key which can be used to login as user 1000 on device
     device_private_key VARCHAR NOT NULL,     -- private key which can be used to login as user 1000 on device
     server_public_key VARCHAR NOT NULL,      -- public key which device will use to ssh into fleet server
     server_private_key VARCHAR NOT NULL,     -- private key which device will use to ssh into fleet server
     ip_provisioned_from VARCHAR NOT NULL     -- IP address from which request to provision this device originated
 );
 CREATE UNIQUE INDEX devices_hwid ON devices(hwid);
 CREATE UNIQUE INDEX devices_fleet_otp_hwid ON devices(fleet, otp, hwid);
 CREATE UNIQUE INDEX devices_fleet_id_in_fleet ON devices(fleet, id_in_fleet);
EOF

echo "Created table.  You can now use fleetsie_gen to populate the table."

exit 0
