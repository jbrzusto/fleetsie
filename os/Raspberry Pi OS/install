#!/bin/bash

# install - run as part of fleetsiemod when modifying a Raspberry Pi OS image
#
# This script must be run from the directory it lives in.
# It assumes the target image partitions are mounted in the directory
# given by environment variable TARGET_ROOT.  The partitions there must
# be available via symlinks "bootfs" and "rootfs"

BOOTFS=$TARGET_ROOT/bootfs
ROOTFS=$TARGET_ROOT/rootfs
SYSTEMD=$ROOTFS/etc/systemd/system
OPT=$ROOTFS/opt/fleetsie

# The top-level directory for fleetsie on the user PC.
# (change if the hierarchy of this repository changes)
FLEETSIE_DIR=../..

FIRMWARE_ARCH=$TARGET_ROOT/firmware-stable.zip
FIRMWARE_URL=https://github.com/raspberrypi/firmware/archive/refs/heads/stable.zip

# update firmware, possibly fetching the archive first.
if [[ ! -f $FIRMWARE_ARCH ]]; then
    cat <<EOF
The file $FIRMWARE_ARCH does not exist in folder $PWD.
If you want me to download it, hit Enter.  Otherwise, hit Ctrl-C
to abort installation.
EOF
    read ignore
    curl -L -o $FIRMWARE_ARCH $FIRMWARE_URL
fi

unzip -j -o -d $BOOTFS $FIRMWARE_ARCH "firmware-stable/boot/start*.elf" "firmware-stable/boot/fixup*.dat"

DST=$SYSTEMD/fleetsie-provision.service
cp ./fleetsie-provision.service $DST
chown root:root $DST
ln -sf /etc/systemd/system/fleetsie-provision.service $SYSTEMD/multi-user.target.wants

mkdir -p $OPT
DST=$OPT/fleetsie_provision
cp ./fleetsie_provision $DST
chmod oug+x $DST

# copy any files needed from the fleetsie repo top-level dir
cp $FLEETSIE_DIR/sshd_config-dev $OPT/sshd_config
cp $FLEETSIE_DIR/ssh_config-dev $OPT/ssh_config

# create skeleton dirs and readme files
mkdir -p $OPT/custom_pre/packages
cat > $OPT/custom_pre/readme.txt <<EOF
This folder contains files used early in the device provisioning process.

- setup is run, if it exists
- any .deb files in ./packages are installed
- overlay.tar.xz is extracted to /, if it exists
- cleanup is run, if it exists
EOF
cat > $OPT/custom_pre/setup <<EOF
#!/bin/bash

# placeholder script - modify as you wish.  This is run on the device before
# fleetsie_provision looks for the USB provisioning disk, before
# installing any .deb files found in ./packages

EOF
cat > $OPT/custom_pre/cleanup <<EOF
#!/bin/bash

# placeholder script - modify as you wish.  This is run on the device before
# fleetsie_provision looks for the USB provisioning disk, but after extracting
# a file called overlay.tar.xz (if it exists in this directory) to "/"
EOF

cat > $OPT/custom_pre/packages/readme.txt <<EOF
# any .deb files here are installed using dpkg -i *.deb after
# running ../setup (if it exists) but before extracting ../overlay.tar.xz (if it exists)
EOF

chown -R root:root $OPT
